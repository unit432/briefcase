call plug#begin()

Plug 'ctrlpvim/ctrlp.vim'
Plug 'scrooloose/nerdcommenter'
Plug 'vim-airline/vim-airline'
Plug 'vim-airline/vim-airline-themes'
Plug 'easymotion/vim-easymotion'
Plug 'tpope/vim-endwise'
Plug 'tpope/vim-fugitive'
Plug 'tpope/vim-surround'
Plug 'tpope/vim-repeat'
Plug 'tpope/vim-unimpaired'
Plug 'tpope/vim-haml'
Plug 'pangloss/vim-javascript'
Plug 'thoughtbot/vim-rspec'
Plug 'airblade/vim-gitgutter'
Plug 'NLKNguyen/papercolor-theme'
Plug 'dense-analysis/ale'
Plug 'elixir-editors/vim-elixir'
Plug 'slim-template/vim-slim'
Plug 'kchmck/vim-coffee-script'
" Plug 'mxw/vim-jsx'

" Initialize plugin system
call plug#end()

" Turn on syntax highlighting
syntax enable

filetype plugin indent on

" == PaperColor ===
set t_Co=256
set background=light
colorscheme PaperColor

set hlsearch 
set cursorcolumn
set cursorline
:highlight CursorColumn guibg=#EDEDED cterm=NONE term=NONE
:highlight Cursorline guibg=#404040 cterm=NONE term=NONE

" Show line numbers
set number

" Encoding
set encoding=utf-8

" Whitespace
set backspace=indent,eol,start
set autoindent
set shiftwidth=2
set softtabstop=2
set expandtab

" Show line numbers
set number

" === EasyMotion ===
" Disable default mappings
let g:EasyMotion_do_mapping = 0 
map <Leader> <Plug>(easymotion-prefix)
nmap s <Plug>(easymotion-overwin-f2)

" == NERD Commenter ===
" Add spaces after comment delimiters by defaultAdd spaces after comment
" delimiters by default
let g:NERDSpaceDelims = 1

" Enable trimming of trailing whitespace when uncommenting
let g:NERDTrimTrailingWhitespace = 1

" === RSpec ===
map <Leader>t :call RunCurrentSpecFile()<CR>
map <Leader>s :call RunNearestSpec()<CR>
map <Leader>l :call RunLastSpec()<CR>
map <Leader>a :call RunAllSpecs()<CR>

" === CtrlP ===
set runtimepath^=~/.vim/bundle/ctrlp.vim
let g:ctrlp_map = '<c-p>'
let g:ctrlp_cmd = 'CtrlP'
let g:ctrlp_working_path_mode = 'ra'
let g:ctrlp_user_command = 'ag %s -l --nocolor -g ""'

" == vim-airline ===
let g:airline_powerline_fonts = 1
let g:airline#extensions#tabline#enabled = 1
let g:airline_theme='papercolor'
let g:Powerline_symbols = "fancy"
set guifont=DejaVu_Sans_Mono_for_Powerline:h10

" == ale ===
let g:ale_fixers = { 'javascript': ['prettier'], 'css': ['prettier'] }
let g:ale_javascript_prettier_options = '--single-quote=true'

" == disable arrow keys ==
noremap <Up> <Nop>
noremap <Down> <Nop>
noremap <Left> <Nop>
noremap <Right> <Nop>
